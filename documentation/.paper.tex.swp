\documentclass[twocolumn,showkeys,eqsecnum,prd,showpacs,notitlepage,9pt]{article}

\usepackage{graphicx}%allows including images
\usepackage{booktabs}%allows the use \toprule,\midrule,\bottomrule in tables
\usepackage{listings}%allows to include "code examples"
\usepackage{dcolumn} %allos colum use
\usepackage{fancyhdr}%allows change page style
\usepackage{anysize}%avoidchange margins

\title{\textbf{Lightwheith Dynamic Memory Manager:\\A simple approach to avoid manual\\ memory mananagement}}%define tittle

\fancypagestyle{plain}{
\fancyhead[L]{Lightweight Dynamic Memory Manager}%define header
\renewcommand{\headrulewidth}{0.5pt}%define line in top
\renewcommand{\footrulewidth}{0.5pt}}%define line in button
\marginsize{2,5cm}{2cm}{2,5cm}{2cm} %define margins {left}{right}{top}{button}


\author{Francisco Alvarado Ferllini - 2014080338\\
		Ismael Madrigal Campos - 2013084063\\
		Albin Mora Valverde - 2014084952\\
		Cristan Rivera Lopez - 2013008650}
\date{}
		
\begin{document}%starts document

\maketitle

\begin{abstract}%start abstract
\emph{	The project  Lightweight Dynamic Memory Manager, is a memory manager implemented with the programing  language c++, the final goal for this project, is create a functional manager of simulated virtual memory, it can be used for emulate any program that have the correct implementation of this program.\\
It could be possible by overloading operators, thats are normally used, and using principal the malloc function, to get the chunk for simulate the memory, where there will be allocated the classes and process we make using abstraction of pointer to refer those an allocated them.\\
The final result is a functional memory manager that allow the use for simulated virtual memory, with two chunks of memory, one for allocate, and one for keep registry of all that is allocated; another important thing is the possibility  to make paging, like real virtual memory, and give the possibility to emulate more expensive objects.\\\\}
\textbf{key words: }allocated, malloc, overloading, paging.
\end{abstract}%finish abstract

\section{Introduction}
	Will be presented the way that this proyect was make, with a wide descriptiion of the implementation and the algorism that the program implements to work correctly.\\
	Importante aspects will explain in this documente, aspects like all the necesary consepts to understand how the dynamic memory works, because by learning the important and basic conceps about the adminiestration of dynamic memory helps to understand the purpose of this project.\\
	This paper will contain a complete analysis of the test makes on the program, using graphics,diagrams,and algorims analisys.\\
	For free the memory \dots
	
\section{Memory Management}
The proces of controlling and coordinatin computer memory is called memmory management. Using memory blocks (chunks) to optimizate the perfomance of running aplications, by dynamic alloction portions of memory from the chunk to programs at their request, and free it for reuse when no longer needed.\\
\subsection{Allocation Pocess}
The allaction process, also know like  dynamic memory allocation, request for a especific size memory, when that block of memory is left, it can produce several problems like fragmentation,wich is a situacion when there are empty blocks between allocated blocks,that invalidate their use for an allocation request.\\

!!!!!hablar de malloc!!!

When a allocarion proces request for memory, the memory needs to be continous, and frangmentation complicates it, for resolve this is necesary use memory compaction, which is a process, that "accommodates" the memory blocs to set all the free memory together, making easy the allocation request, if there is no enougt memory for allocate, another process can make the program think it has more memory that it really has.\\
\subsection{Paging Process}
Paging is a memory management technique of virtual memory, which the memory is divided into same size blocks called pages (secondary storage), where is posible to  retrieve datas. Paging give the posibility of allocate process that requires more memory than the chunk has,because by dividing the all the  process in pages, is posible to simulete to has more memory, sending and retruieving proces data.  
\section{Implementation Details}



\begin{thebibliography}{X}

\bibitem{cplusplus} cplusplus.(2015).http://www.cplusplus.com/doc/tutorial/files/
\bibitem{cplusplus} cplusplus.(2015).http://www.cplusplus.com/reference/fstream/fstream/open/
\bibitem{cplusplus} cplusplus.(2015)http://www.cplusplus.com/forum/beginner/138356/
\bibitem{Pozo} Pozo,S.(2001).http://c.conclase.net/curso/?cap=039
\bibitem{Pozo} Pozo,S.(2001).http://www.c.conclase.net/ficheros/
\bibitem{tannen} Tannenbaum.A.(2009).\emph{Sistemas Operativos Modernos}.3ed.Amsterdam:Pearson
\bibitem{cplusplus} cplusplus.(2015).http://www.cplusplus.com/forum/beginner/138356/
\bibitem{stackoverflow} stackoverflow.(2009).http://stackoverflow.com/questions/625799/resolve-circular-dependencies-in-c
\bibitem{stackoverflow} stackoverflow.(2012).http://stackoverflow.com/questions/7665912/double-include-solution
\bibitem{bantasa} bantasa.(2012).http://forums.codeguru.com/showthread.php?527189-Error-Using-this-pointer-in-Static-Members-Function
\bibitem{merida} Merida,J.(2013).https://www.youtube.com/watch?v=sYsmF4V8D1c
\bibitem{Barney} Barney,B.(2014).https://computing.llnl.gov/tutorials/pthreads/
\bibitem{stackoverflow}stackoverflow.(2010).http://stackoverflow.com/questions/1151582/pthread-function-from-a-class
\bibitem{cppreference} cppreference.(2014).http://en.cppreference.com/w/cpp/memory
\bibitem{ Roberts}  Roberts.(2015).http://www.andy-roberts.net/writing/latex




\end{thebibliography}


\pagestyle{fancy} 
\end{document}%finish document